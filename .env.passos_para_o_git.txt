1 - Mude para a branch principal (main):
	git checkout main

2 - Atualize sua branch main local:
	git pull origin main

3 - Crie e mude para sua nova branch de funcionalidade:
	git checkout -b feature/<nome-da-branch>

4 - Fazer as Alterações de codigo (adicionar scroipt, alterar, criar novos) e Realizar o Commit
	4.1 - Prepare todas as suas alterações para o commit:
		git add .
	4.2 - Verifique o status das mudanças (opcional):
		git status

5 - Faça o commit das suas alterações: Use uma mensagem de commit clara e descritiva.
	git commit -m "feat: <Descricao>"

6 - Enviar a Branch para o GitHub e Criar o Pull Request
	git push origin feature/<nome-da-branch>

	6.1 - Opcional
		Crie o Pull Request (PR) no GitHub:
			Abra seu navegador e vá para o repositório do seu projeto no GitHub.
			O GitHub geralmente mostrará uma notificação amarela ou um botão "Compare & pull request" (Comparar & pull request) no topo da página, indicando sua nova branch.
			Clique nele para criar seu Pull Request.
			Preencha o título e a descrição do PR, explicando detalhadamente o que você fez e por que.
			Clique em "Create pull request" (Criar pull request).
			
7 - Mesclar via Linha de Comando (Direto e Rápido)
	7.1 - Mude para a branch main:
		git checkout main
	7.2 - Puxe quaisquer alterações recentes da main no GitHub:
		git pull origin main
	7.3 - Faça o merge da sua branch de funcionalidade na main local:
		git merge feature/<nome-da-branch>
			Se não houver conflitos: O Git fará o merge automaticamente e abrirá um editor de texto (Vim, Notepad++, etc., dependendo da sua configuração Git) para que você digite a mensagem do merge commit. A mensagem padrão (Merge branch 'feature/f1teams-api-pool' into main) é geralmente boa e você pode aceitá-la.
			Nesse momento, você verá a mensagem hint: Waiting for your editor to close the file... no terminal, indicando que o Git está esperando você interagir com o editor.
			Você deve digitar sua mensagem (ou aceitar a padrão), salvar o arquivo no editor e fechar o editor. Somente após fechar o editor, o Git finalizará o merge.		
	7.4 - Envie as alterações da main local para o GitHub:
		git push origin main

8 - Sincronizar seu Repositório Local Pós-Merge
	8.1 - Vá para sua branch main local (se já não estiver):
		git checkout main
	8.2 - Puxe as alterações mais recentes da main remota:
		git pull origin main
	8.3 - Exclua a branch de funcionalidade local (opcional, mas recomendado):
		git branch -d feature/<nome-da-branch>
	8.4 - Exclua a branch remota (opcional, mas recomendado):
		git push origin --delete feature/f1teams-api-pool